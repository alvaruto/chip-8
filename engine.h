#pragma once

#include "SDL.h"
#include <errno.h>
#include <string>
#include <array>

class Engine
{
public:
	Engine();
	~Engine();
	bool initGraphics();
	void loadGame(const char* game);
	void parseInput(unsigned char* key);
	void videoRender();
	void emulateCycle();

	unsigned char key[16]{}; //Key status array
	bool drawFlag = 0;
	bool quit = 0;
	int scale{};
	unsigned char delayTimer{};

private:
	const unsigned char chip8_fontset[80] =
	{
	0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
	0x20, 0x60, 0x20, 0x20, 0x70, // 1
	0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
	0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
	0x90, 0x90, 0xF0, 0x10, 0x10, // 4
	0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
	0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
	0xF0, 0x10, 0x20, 0x40, 0x40, // 7
	0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
	0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
	0xF0, 0x90, 0xF0, 0x90, 0x90, // A
	0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
	0xF0, 0x80, 0x80, 0x80, 0xF0, // C
	0xE0, 0x90, 0x90, 0x90, 0xE0, // D
	0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
	0xF0, 0x80, 0xF0, 0x80, 0x80 // F
	};

	//Memory
	unsigned short opcode{};
	unsigned char memory[4096]{};
	unsigned char V[16]{}; // 15 general purpose register + 1 used for the carry flag
	unsigned short I{}; //Index register
	unsigned short pc = 0x200; //Programs start at 0x200 address
	unsigned char soundTimer{}; //Note: audio not implemented.
	unsigned short stack[16]{};
	unsigned short sp{};
	unsigned char gfx[64 * 32]{}; //Screen pixels

	SDL_Window* window = NULL;
	SDL_Surface* screenSurface = NULL;
	SDL_Renderer* renderer = NULL;
};

